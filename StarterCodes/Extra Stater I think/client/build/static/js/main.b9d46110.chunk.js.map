{"version":3,"sources":["AppMode.js","components/NavBar.js","components/SideMenu.js","components/ModeBar.js","components/FloatingButton.js","md5.js","components/LoginPage.js","components/FeedPage.js","components/RoundsTable.js","components/RoundForm.js","components/Rounds.js","components/CoursesPage.js","components/App.js","serviceWorker.js","index.js"],"names":["AppMode","LOGIN","FEED","ROUNDS","ROUNDS_LOGROUND","ROUNDS_EDITROUND","COURSES","Object","freeze","NavBar","handleMenuBtnClick","props","mode","changeMode","toggleMenuOpen","getMenuBtnIcon","menuOpen","className","onClick","this","id","title","React","Component","SideMenu","renderModeMenuItems","userId","showAbout","ModeBar","handleModeBtnClick","newMode","FloatingButton","handleClick","icon","md5cycle","x","k","a","b","c","d","ff","gg","hh","ii","add32","cmn","q","s","t","md5blk","i","md5blks","charCodeAt","hex_chr","split","rhex","n","j","md5","length","join","hex","state","substring","tail","md51","LoginPage","handleLogin","setState","loginBtnIcon","loginBtnLabel","setUser","emailInputRef","current","value","username","provider","profileImageUrl","setAuthenticated","handleLoginSubmit","event","preventDefault","url","passwordInputRef","fetch","method","res","status","window","open","text","resText","loginMsg","setTimeout","hideErrorMsg","handleOAuthLogin","handleOAuthLoginClick","checkAccountValidity","accountPassword","accountPasswordRepeat","repeatPassRef","setCustomValidity","handleNewAccountChange","target","name","handleCreateAccount","accountName","loginInfo","password","securityQuestion","accountSecurityQuestion","securityAnswer","accountSecurityAnswer","headers","body","JSON","stringify","alert","showAccountDialog","handleLoginChange","thisUser","data","parse","localStorage","getItem","hasOwnProperty","accountInfo","renderAccountDialog","role","onSubmit","type","size","placeholder","pattern","ref","newUserRef","required","onChange","rows","cols","maxLength","handleLookUpAccount","accountEmailRef","focus","json","resetEmail","resetQuestion","resetAnswer","showLookUpAccountDialog","showSecurityQuestionDialog","renderLookUpAccountDialog","handleSecurityQuestionResponse","securityAnswerRef","select","showPasswordResetDialog","renderSecurityQuestionDialog","readOnly","handleResetPassword","resetPasswordRef","resetPasswordRepeatRef","resetInfo","renderPasswordResetDialog","createRef","githubIcon","githubLabel","htmlFor","style","padding","fontSize","FeedPage","src","height","width","fontStyle","RoundsTable","editRound","setEditId","confirmDelete","setDeleteId","doDelete","deleteRound","cancelDelete","renderConfirmDeleteDialog","renderTable","table","r","push","key","rounds","date","course","keys","colSpan","RoundForm","handleChange","seconds","handleSubmit","faIcon","btnLabel","roundData","saveRound","computeSGS","Number","strokes","minutes","today","Date","now","getTimezoneOffset","toISOString","substr","holes","notes","startData","selected","min","max","Rounds","fetchRounds","user","msg","val","deleteId","editId","newData","_id","addRound","Fragment","CoursesPage","modeTitle","modeToPage","App","handleChangeMode","openMenu","closeMenu","prevState","userObj","auth","authenticated","stopPropagation","toggleAbout","renderAbout","textAlign","href","addEventListener","then","response","obj","isAuthenticated","roundCount","setItem","removeEventListener","ModePage","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b9d46110.chunk.js","sourcesContent":["/* AppMode: The enumerated type for AppMode. If we were using TypeScript, we could\nuse the predefined enum type; see\nhttps://www.typescriptlang.org/docs/handbook/enums.html. Declaring an enumerated\ntype as a JavaScript object has important limitations (see\nhttps://stackoverflow.com/questions/287903/what-is-the-preferred-syntax-for-defining-enums-in-javascript),\nbut it will do for our purposes*/\n\nconst AppMode = {\n    LOGIN: \"LoginMode\",\n    FEED: \"FeedMode\",\n    ROUNDS: \"RoundsMode\",\n    ROUNDS_LOGROUND: \"RoundsMode-LogRound\",\n    ROUNDS_EDITROUND: \"RoundsMode-EditRound\",\n    COURSES: \"CoursesMode\"\n};\n\nObject.freeze(AppMode); //This ensures that the object is immutable.\n\nexport default AppMode;","import React from 'react';\nimport AppMode from '../AppMode.js';\n\nclass NavBar extends React.Component {\n\n    handleMenuBtnClick = () => {\n      if (this.props.mode === AppMode.ROUNDS_LOGROUND ||\n          this.props.mode === AppMode.ROUNDS_EDITROUND) {\n        this.props.changeMode(AppMode.ROUNDS);\n      } else if (this.props.mode != AppMode.LOGIN) {\n        this.props.toggleMenuOpen();\n      }\n    }\n\n    getMenuBtnIcon = () => {\n      if (this.props.mode === AppMode.ROUNDS_LOGROUND || \n          this.props.mode === AppMode.ROUNDS_EDITROUND)\n          return \"fa fa-arrow-left\";\n      if (this.props.menuOpen)\n        return \"fa fa-times\";\n      return \"fa fa-bars\";\n    }\n\n    render() {\n       return (\n        <div className=\"navbar\">  \n        <span className=\"navbar-items\">\n          <button className=\"sidemenu-btn\" onClick={this.handleMenuBtnClick}>\n            <span id=\"sidemenu-btn-icon\" \n              className={\"sidemenu-btn-icon \" + this.getMenuBtnIcon()}>\n            </span>\n          </button>\n          <span id=\"topBarTitle\" className=\"navbar-title\">\n            &nbsp;{this.props.title}\n          </span>\n        </span>\n      </div>\n    ); \n  }\n}\n\nexport default NavBar;","import React from 'react';\nimport AppMode from '../AppMode.js';\n\nclass SideMenu extends React.Component {\n\n  //renderModeItems -- Renders correct subset of mode menu items based on\n  //current mode, which is stored in this.prop.mode. Uses switch statement to\n  //determine mode.\n  renderModeMenuItems = () => {\n    switch (this.props.mode) {\n      case AppMode.ROUNDS:\n        return(\n          <div>\n            <a className=\"menuItem\">\n              <span className=\"fa fa-search\"></span>&nbsp;View Data Table</a>\n            <a className=\"sidemenu-item\" onClick={() => this.props.changeMode(AppMode.ROUNDS_LOGROUND)}>\n              <span className=\"fa fa-plus\"></span>&nbsp;Log New Round</a>\n          </div>\n        );\n      break;\n      case AppMode.COURSES:\n        return(\n          <div>\n          <a className=\"sidemenu-item\">\n              <span className=\"fa fa-plus\"></span>&nbsp;Not implemented yet 1</a>\n          <a className=\"sidemenu-item\">\n              <span className=\"fa fa-search\"></span>&nbsp;Not implemente yet 2</a>\n          </div>\n        );\n      default:\n          return null;\n      }\n  }\n\n    \n    render() {\n       return (\n        <div className= {\"sidemenu \" + \n        (this.props.menuOpen ? \"sidemenu-open\" : \"sidemenu-closed\")} >\n          {/* SIDE MENU TITLE */}\n          <div className=\"sidemenu-title\">\n            <span className=\"sidemenu-userID\">&nbsp;{this.props.userId}</span>\n          </div>\n          {/* MENU CONTENT */}\n          {/*Mode-based menu items */}\n          {this.renderModeMenuItems()}\n          {/* Always-there menu items */}\n          <a className=\"sidemenu-item\" onClick={this.props.showAbout}><span className=\"fa fa-info-circle\">\n              </span>&nbsp;About</a>\n          <a className=\"sidemenu-item\" onClick={() => this.props.changeMode(AppMode.LOGIN)}><span className=\"fa fa-sign-out\">\n              </span>&nbsp;Log Out</a>\n        </div>\n        );\n    }\n  }\n\nexport default SideMenu;\n","import React from 'react';\nimport AppMode from '../AppMode.js';\n\nclass ModeBar extends React.Component {\n\n    handleModeBtnClick = (newMode) => {\n      if (this.props.mode != newMode) {\n          this.props.changeMode(newMode);\n      }\n    }\n  \n    render() {\n      return(\n        <div className={\"modebar\" + (this.props.mode === AppMode.LOGIN ? \n          \" invisible\" : \" visible\")}>\n          <a className={\"modebar-btn\" +\n            (this.props.mode === AppMode.ROUNDS ? \" modebar-item-selected\" : \"\")} \n            onClick={this.props.menuOpen ? null : \n              () => this.handleModeBtnClick(AppMode.ROUNDS)}>\n            <span className=\"modebar-icon fa fa-history\"></span>\n            <span className=\"modebar-text\">Rounds</span>\n          </a>\n          <a className={\"modebar-btn\" +\n            (this.props.mode === AppMode.COURSES ? \" modebar-item-selected\" : \"\")} \n             onClick={this.props.menuOpen ? null : \n              () => this.handleModeBtnClick(AppMode.COURSES)}>\n            <span className=\"modebar-icon fa fa-flag\"></span>\n            <span className=\"modebar-text\">Courses</span>\n          </a> \n        </div>\n      );\n    }\n\n}\n\nexport default ModeBar;\n","import React from 'react';\n\nclass FloatingButton extends React.Component {\n  \n    render() {\n      return(\n        <div>\n          <a className=\"floatbtn\" onClick={(this.props.menuOpen ? null : \n             this.props.handleClick)}>\n            <span className={\"floatbtn-icon \" + this.props.icon}></span>\n          </a>\n        </div>  \n      );\n    }\n}\n\nexport default FloatingButton;","function md5cycle(x, k) {\n    var a = x[0], b = x[1], c = x[2], d = x[3];\n    \n    a = ff(a, b, c, d, k[0], 7, -680876936);\n    d = ff(d, a, b, c, k[1], 12, -389564586);\n    c = ff(c, d, a, b, k[2], 17,  606105819);\n    b = ff(b, c, d, a, k[3], 22, -1044525330);\n    a = ff(a, b, c, d, k[4], 7, -176418897);\n    d = ff(d, a, b, c, k[5], 12,  1200080426);\n    c = ff(c, d, a, b, k[6], 17, -1473231341);\n    b = ff(b, c, d, a, k[7], 22, -45705983);\n    a = ff(a, b, c, d, k[8], 7,  1770035416);\n    d = ff(d, a, b, c, k[9], 12, -1958414417);\n    c = ff(c, d, a, b, k[10], 17, -42063);\n    b = ff(b, c, d, a, k[11], 22, -1990404162);\n    a = ff(a, b, c, d, k[12], 7,  1804603682);\n    d = ff(d, a, b, c, k[13], 12, -40341101);\n    c = ff(c, d, a, b, k[14], 17, -1502002290);\n    b = ff(b, c, d, a, k[15], 22,  1236535329);\n    \n    a = gg(a, b, c, d, k[1], 5, -165796510);\n    d = gg(d, a, b, c, k[6], 9, -1069501632);\n    c = gg(c, d, a, b, k[11], 14,  643717713);\n    b = gg(b, c, d, a, k[0], 20, -373897302);\n    a = gg(a, b, c, d, k[5], 5, -701558691);\n    d = gg(d, a, b, c, k[10], 9,  38016083);\n    c = gg(c, d, a, b, k[15], 14, -660478335);\n    b = gg(b, c, d, a, k[4], 20, -405537848);\n    a = gg(a, b, c, d, k[9], 5,  568446438);\n    d = gg(d, a, b, c, k[14], 9, -1019803690);\n    c = gg(c, d, a, b, k[3], 14, -187363961);\n    b = gg(b, c, d, a, k[8], 20,  1163531501);\n    a = gg(a, b, c, d, k[13], 5, -1444681467);\n    d = gg(d, a, b, c, k[2], 9, -51403784);\n    c = gg(c, d, a, b, k[7], 14,  1735328473);\n    b = gg(b, c, d, a, k[12], 20, -1926607734);\n    \n    a = hh(a, b, c, d, k[5], 4, -378558);\n    d = hh(d, a, b, c, k[8], 11, -2022574463);\n    c = hh(c, d, a, b, k[11], 16,  1839030562);\n    b = hh(b, c, d, a, k[14], 23, -35309556);\n    a = hh(a, b, c, d, k[1], 4, -1530992060);\n    d = hh(d, a, b, c, k[4], 11,  1272893353);\n    c = hh(c, d, a, b, k[7], 16, -155497632);\n    b = hh(b, c, d, a, k[10], 23, -1094730640);\n    a = hh(a, b, c, d, k[13], 4,  681279174);\n    d = hh(d, a, b, c, k[0], 11, -358537222);\n    c = hh(c, d, a, b, k[3], 16, -722521979);\n    b = hh(b, c, d, a, k[6], 23,  76029189);\n    a = hh(a, b, c, d, k[9], 4, -640364487);\n    d = hh(d, a, b, c, k[12], 11, -421815835);\n    c = hh(c, d, a, b, k[15], 16,  530742520);\n    b = hh(b, c, d, a, k[2], 23, -995338651);\n    \n    a = ii(a, b, c, d, k[0], 6, -198630844);\n    d = ii(d, a, b, c, k[7], 10,  1126891415);\n    c = ii(c, d, a, b, k[14], 15, -1416354905);\n    b = ii(b, c, d, a, k[5], 21, -57434055);\n    a = ii(a, b, c, d, k[12], 6,  1700485571);\n    d = ii(d, a, b, c, k[3], 10, -1894986606);\n    c = ii(c, d, a, b, k[10], 15, -1051523);\n    b = ii(b, c, d, a, k[1], 21, -2054922799);\n    a = ii(a, b, c, d, k[8], 6,  1873313359);\n    d = ii(d, a, b, c, k[15], 10, -30611744);\n    c = ii(c, d, a, b, k[6], 15, -1560198380);\n    b = ii(b, c, d, a, k[13], 21,  1309151649);\n    a = ii(a, b, c, d, k[4], 6, -145523070);\n    d = ii(d, a, b, c, k[11], 10, -1120210379);\n    c = ii(c, d, a, b, k[2], 15,  718787259);\n    b = ii(b, c, d, a, k[9], 21, -343485551);\n    \n    x[0] = add32(a, x[0]);\n    x[1] = add32(b, x[1]);\n    x[2] = add32(c, x[2]);\n    x[3] = add32(d, x[3]);\n    \n    }\n    \n    function cmn(q, a, b, x, s, t) {\n    a = add32(add32(a, q), add32(x, t));\n    return add32((a << s) | (a >>> (32 - s)), b);\n    }\n    \n    function ff(a, b, c, d, x, s, t) {\n    return cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    }\n    \n    function gg(a, b, c, d, x, s, t) {\n    return cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    }\n    \n    function hh(a, b, c, d, x, s, t) {\n    return cmn(b ^ c ^ d, a, b, x, s, t);\n    }\n    \n    function ii(a, b, c, d, x, s, t) {\n    return cmn(c ^ (b | (~d)), a, b, x, s, t);\n    }\n    \n    function md51(s) {\n    var txt = '';\n    var n = s.length,\n    state = [1732584193, -271733879, -1732584194, 271733878], i;\n    for (i=64; i<=s.length; i+=64) {\n    md5cycle(state, md5blk(s.substring(i-64, i)));\n    }\n    s = s.substring(i-64);\n    var tail = [0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0];\n    for (i=0; i<s.length; i++)\n    tail[i>>2] |= s.charCodeAt(i) << ((i%4) << 3);\n    tail[i>>2] |= 0x80 << ((i%4) << 3);\n    if (i > 55) {\n    md5cycle(state, tail);\n    for (i=0; i<16; i++) tail[i] = 0;\n    }\n    tail[14] = n*8;\n    md5cycle(state, tail);\n    return state;\n    }\n    \n    /* there needs to be support for Unicode here,\n     * unless we pretend that we can redefine the MD-5\n     * algorithm for multi-byte characters (perhaps\n     * by adding every four 16-bit characters and\n     * shortening the sum to 32 bits). Otherwise\n     * I suggest performing MD-5 as if every character\n     * was two bytes--e.g., 0040 0025 = @%--but then\n     * how will an ordinary MD-5 sum be matched?\n     * There is no way to standardize text to something\n     * like UTF-8 before transformation; speed cost is\n     * utterly prohibitive. The JavaScript standard\n     * itself needs to look at this: it should start\n     * providing access to strings as preformed UTF-8\n     * 8-bit unsigned value arrays.\n     */\n    function md5blk(s) { /* I figured global was faster.   */\n    var md5blks = [], i; /* Andy King said do it this way. */\n    for (i=0; i<64; i+=4) {\n    md5blks[i>>2] = s.charCodeAt(i)\n    + (s.charCodeAt(i+1) << 8)\n    + (s.charCodeAt(i+2) << 16)\n    + (s.charCodeAt(i+3) << 24);\n    }\n    return md5blks;\n    }\n    \n    var hex_chr = '0123456789abcdef'.split('');\n    \n    function rhex(n)\n    {\n    var s='', j=0;\n    for(; j<4; j++)\n    s += hex_chr[(n >> (j * 8 + 4)) & 0x0F]\n    + hex_chr[(n >> (j * 8)) & 0x0F];\n    return s;\n    }\n    \n    function hex(x) {\n    for (var i=0; i<x.length; i++)\n    x[i] = rhex(x[i]);\n    return x.join('');\n    }\n    \n    export default function md5(s) {\n      return hex(md51(s));\n    }\n    \n    /* this function is much faster,\n    so if possible we use it. Some IEs\n    are the only ones I know of that\n    need the idiotic second function,\n    generated by an if clause.  */\n    \n    function add32(a, b) {\n    return (a + b) & 0xFFFFFFFF;\n    }\n    \n    if (md5('hello') != '5d41402abc4b2a76b9719d911017c592') {\n    function add32(x, y) {\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n    msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n    return (msw << 16) | (lsw & 0xFFFF);\n    }\n    }","import React from 'react';\nimport AppMode from \"./../AppMode.js\";\nimport md5 from '../md5.js';\n\nclass LoginPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        //Create a ref for the email input DOM element\n        this.emailInputRef = React.createRef();\n        this.passwordInputRef = React.createRef();\n        this.repeatPassRef = React.createRef();\n        this.newUserRef = React.createRef();\n        this.accountEmailRef = React.createRef();\n        this.securityAnswerRef = React.createRef();\n        this.resetPasswordRef = React.createRef();\n        this.resetPasswordRepeatRef = React.createRef();\n        this.state = {loginBtnIcon: \"fa fa-sign-in\",\n                      loginBtnLabel: \"Log In\",\n                      loginMsg: \"\",\n                      githubIcon: \"fa fa-github\",\n                      githubLabel: \"Sign in with GitHub\",\n                      showAccountDialog: false,\n                      showLookUpAccountDialog: false,\n                      showSecurityQuestionDialog: false,\n                      showPasswordResetDialog: false,\n                      resetEmail: \"\",\n                      resetQuestion: \"\",\n                      resetAnswer: \"\",\n                      accountName: \"\",\n                      accountPassword: \"\",\n                      accountPasswordRepeat: \"\",\n                      accountSecurityQuestion: \"\",\n                      accountSecurityAnswer: \"\",\n                     };\n    }\n\n//Focus cursor in email input field when mounted\n    componentDidMount() {\n        this.emailInputRef.current.focus();\n}\n\n//handleLogin -- Callback function that sets up initial app state upon login.\n//Note: This implements the OLD local authentication strategy that used localStorage\nhandleLogin = () => {\n    //Stop spinner and set authStrategy to local\n    this.setState({loginBtnIcon: \"fa fa-sign-in\",\n                   loginBtnLabel: \"Log In\"});\n    //Set current user in parent component\n    //With local authentication all we have is an email\n    //address; we do not have additional info\n    //We'll grab profile pic from the gravatar service. User can create account\n    //at http://gravatar.com and define their profile pic.\n    this.props.setUser({id: this.emailInputRef.current.value,\n        username:  this.emailInputRef.current.value,\n        provider: \"local\",\n        profileImageUrl: `https://www.gravatar.com/avatar/${md5(this.emailInputRef.current.value)}`});\n    //Set authenticated state in parent component\n    this.props.setAuthenticated(true);\n    //Trigger switch to FEED mode (default app landing page)\n    this.props.changeMode(AppMode.ROUNDS);\n}\n\n//handleLoginSubmit (Passport) -- When the user clicks the login button, we want to\n//initiate a login using Passport's local method. We accomplish this through a\n//post request to the /login route, passing in the username and password\nhandleLoginSubmit = async (event) => {\n    event.preventDefault();\n    this.setState({loginBtnIcon: \"fa fa-spin fa-spinner\",\n                   loginBtnLabel: \"Logging In...\"});\n    const url = \"/auth/login?username=\" + this.emailInputRef.current.value +\n                \"&password=\" + this.passwordInputRef.current.value;\n    const res = await fetch(url, {method: 'POST'}); \n    if (res.status == 200) { //successful login!\n        //Force componentDidMount to execute.\n        //authenticated state will be updated and \n        //Session will be deserialized.\n        window.open(\"/\",\"_self\");\n    } else { //Unsuccessful login\n      //Grab textual error message\n      const resText = await res.text();\n      //Display error message for 3 seconds and invite another login attempt\n      this.setState({loginBtnIcon: \"fa fa-sign-in\",\n                     loginBtnLabel: \"Log In\",\n                     loginMsg: resText}, () => setTimeout(this.hideErrorMsg,3000));\n    }\n}\n\n//hideErrorMsg -- Clears the email and pasword field and hides the login error\n//message, thus inviting a new attempt.\nhideErrorMsg = () => {\n    this.emailInputRef.current.value = \"\";\n    this.passwordInputRef.current.value = \"\";\n    this.setState({loginMsg: \"\"});\n}\n\n//handleOAuthLogin -- Callback function that initiates contact with OAuth\n//provider\nhandleOAuthLogin = (provider) => {\n    window.open(`/auth/${provider}`,\"_self\");\n}\n\n//handleOAuthLoginClick -- Called whent the user clicks on button to\n//authenticate via a third-party OAuth service. The name of the provider is\n//passed in as a parameter.\nhandleOAuthLoginClick = (provider) => {\n   this.setState({[provider + \"Icon\"] : \"fa fa-spin fa-spinner\",\n                  [provider + \"Label\"] : \"Connecting...\"});\n   setTimeout(() => this.handleOAuthLogin(provider),1000);\n}\n\n//checkAccountValidity -- Callback function invoked after a form element in\n//the 'Create Account' dialog box changes and component state has been\n//updated. We need to check whether the passwords match and whether an\n//account is already associated with the email address entered. If so, we\n//set a custom validity message to be displayed when the user clicks the\n//'Create Account' button. Otherwise, we reset the custom validity message\n//to empty so that it will NOT fire when the user clicks 'Create Account'.\ncheckAccountValidity = () => {\n    if (this.state.accountPassword != this.state.accountPasswordRepeat) {\n        //Passwords don't match\n        this.repeatPassRef.current.setCustomValidity(\"This password must match original password.\");\n    } else {\n        this.repeatPassRef.current.setCustomValidity(\"\");\n    }\n    //let data = JSON.parse(localStorage.getItem(\"speedgolfUserData\"));\n    //if (data != null && data.hasOwnProperty(this.state.accountName)) {\n        //The user name is already taken\n   //     this.newUserRef.current.setCustomValidity(\"An account already exists under this email address. Use 'Reset password' to recover the password.\");\n   // } else {\n   //     this.newUserRef.current.setCustomValidity(\"\");\n   // }\n}\n    \n//handleNewAccountChange -- Called when a field in a dialog box form changes.\n//Update corresponding state variable and potentially update the custom\n//message.\nhandleNewAccountChange = (event) => {\n    this.setState({[event.target.name]: event.target.value},this.checkAccountValidity);\n}\n\n//handleCreateAccount -- Triggered when user clicks on \"Create Account.\"\n//Custom data checking ensures user account under this email does not exist\n//and that the rest of the info is valid. At this point, we can create \n//new object for user, save to localStorage and take user to app's landing page. \nhandleCreateAccount = async (event) => {\n    event.preventDefault();\n    const url = '/users/' + this.state.accountName;\n    const loginInfo = {password: this.state.accountPassword,\n                       securityQuestion: this.state.accountSecurityQuestion,\n                       securityAnswer: this.state.accountSecurityAnswer};\n    const res = await fetch(url, {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n        method: 'POST',\n        body: JSON.stringify(loginInfo)}); \n    if (res.status == 200) { //successful account creation!\n        alert(\"Your account was successfully created. Please log in using your email and password to continue.\");\n        this.setState({showAccountDialog: false});\n    } else { //Unsuccessful account creation\n      //Grab textual error message\n      const resText = await res.text();\n      alert(resText); //most likely the username is already taken\n    }\n}\n\n//handleLoginChange -- Check the validity of the username (email address)\n//password entered into the login page, setting the customValidity message \n//appropriately. \nhandleLoginChange = (event) => {\n    let thisUser = this.emailInputRef.current.value;\n    let data = JSON.parse(localStorage.getItem(\"speedgolfUserData\"));\n    //Check username and password:\n    if (data == null || !data.hasOwnProperty(thisUser)) { \n       this.emailInputRef.current.setCustomValidity(\"No account with this email address exists. Choose 'Create an account'.\");\n         return; //Exit the function; no need to check pw validity\n     } else {\n         this.emailInputRef.current.setCustomValidity(\"\");\n     }\n     if (data[thisUser].accountInfo.password != this.passwordInputRef.current.value) {\n        this.passwordInputRef.current.setCustomValidity(\"The password you entered is incorrect. Please try again or choose 'Reset your password'.\");\n     } else {\n        this.passwordInputRef.current.setCustomValidity(\"\");\n     }\n }\n \n        \n    //renderAccountDialog -- Present the \"create account\" dialog\n    renderAccountDialog = () => {\n        return (\n        <div className=\"modal\" role=\"dialog\">\n          <div className=\"modal-dialog modal-lg\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h3 className=\"modal-title\"><b>Create New Account</b>\n                  <button className=\"close-modal-button\" \n                    onClick={() => {this.setState({showAccountDialog: false})}}>\n                    &times;</button>\n                </h3>\n              </div>\n              <div className=\"modal-body\">\n                <form onSubmit={this.handleCreateAccount}>\n                <label>\n                    Email: \n                    <input\n                    className=\"form-control form-text\"\n                    name=\"accountName\"\n                    type=\"email\"\n                    size=\"35\"\n                    placeholder=\"Enter Email Address\"\n                    pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\n                    ref={this.newUserRef}\n                    required={true}\n                    value={this.state.accountName}\n                    onChange={this.handleNewAccountChange}\n                    />\n                </label>\n                \n                <label>\n                    Password:\n                    <input\n                    className=\"form-control form-text\"\n                    name=\"accountPassword\"\n                    type=\"password\"\n                    size=\"35\"\n                    placeholder=\"Enter Password\"\n                    pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\n                    required={true}\n                    ref={this.repeatPassRef}\n                    value={this.state.accountPassword}\n                    onChange={this.handleNewAccountChange}\n                    />\n                </label>\n                \n                <label>\n                    Repeat Password:\n                    <input\n                    className=\"form-control form-text\"\n                    name=\"accountPasswordRepeat\"\n                    type=\"password\"\n                    size=\"35\"\n                    placeholder=\"Repeat Password\"\n                    required={true}\n                    ref={this.repeatPassRef}\n                    value={this.state.accountPasswordRepeat}\n                    onChange={this.handleNewAccountChange}\n                    />\n                </label>\n                \n                <label>\n                    Security Question:\n                    <textarea\n                    className=\"form-control form-text\"\n                    name=\"accountSecurityQuestion\"\n                    size=\"35\"\n                    placeholder=\"Security Question\"\n                    rows=\"2\"\n                    cols=\"35\"\n                    maxLength=\"100\"\n                    required={true}\n                    value={this.state.accountSecurityQuestion}\n                    onChange={this.handleNewAccountChange}\n                    />\n                </label>\n                <label>\n                    Answer to Security Question:\n                    <textarea\n                    className=\"form-control form-text\"\n                    name=\"accountSecurityAnswer\"\n                    type=\"text\"\n                    placeholder=\"Answer\"\n                    rows=\"2\"\n                    cols=\"35\"\n                    maxLength=\"100\"\n                    required={true}\n                    value={this.state.accountSecurityAnswer}\n                    onChange={this.handleNewAccountChange}\n                    />\n                </label>\n                <button role=\"submit\" className=\"btn btn-primary btn-color-theme form-submit-btn\">\n                    <span className=\"fa fa-user-plus\"></span>&nbsp;Create Account\n                </button>\n                </form>\n            </div>\n          </div>\n        </div>\n    </div>\n    );\n\n}\n\n//handleLookUpAccount: When the user clicks on the \"Look Up Account\" dialog box\n//button, we check whether the account exists. If it does, we update the state,\n//setting the resetEmail var to the email entered, hiding the current dialog box\n//and showing the security question dialog box.\nhandleLookUpAccount = async (event) => {\n    event.preventDefault();\n    let url = \"/users/\" + this.accountEmailRef.current.value;\n    let res = await fetch(url, {method: 'GET'});\n    let body;\n    if (res.status != 200) {\n        alert(\"Sorry, there is no account associated with that email address.\");\n        this.accountEmailRef.current.focus();\n        return;\n    } \n    body = await res.json();\n    body = JSON.parse(body);\n    alert(\"Body: \" + body);\n    //if here, account exists -- user account info and push to state vars\n    this.setState({resetEmail: this.accountEmailRef.current.value, \n                   resetQuestion:  body.securityQuestion,\n                   resetAnswer: body.securityAnswer,\n                   showLookUpAccountDialog: false, \n                   showSecurityQuestionDialog: true});\n    this.emailInputRef.current.value = \"\"; //clear out field\n}\n\n//renderLookUpAccountDialog -- Present a dialog box for user to enter the email address\n//associated with their account in case where they want to reset password\nrenderLookUpAccountDialog = () => {\n    return (\n    <div className=\"modal\" role=\"dialog\">\n      <div className=\"modal-dialog modal-lg\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h3 className=\"modal-title\"><b>Look Up Account</b>\n              <button className=\"close-modal-button\" \n                onClick={() => {this.setState({showLookUpAccountDialog: false})}}>\n                &times;</button>\n            </h3>\n          </div>\n          <div className=\"modal-body\">\n            <form onSubmit={this.handleLookUpAccount}>\n            <label>\n                Account Email Address: \n                <input\n                className=\"form-control form-text\"\n                type=\"email\"\n                size=\"35\"\n                placeholder=\"Enter Email Address\"\n                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\n                ref={this.accountEmailRef}\n                required={true}\n                />\n            </label>\n            <button type=\"submit\" className=\"btn btn-primary btn-color-theme form-submit-btn\">\n                <span className=\"fa fa-search\"></span>&nbsp;Look Up Account\n            </button>\n            </form>\n        </div>\n      </div>\n    </div>\n  </div>\n  );  \n}\n\n//handleSecurityQuestionResponse: When the user clicks on the \"Check Answer\" dialog box\n//button, we check whether the security question answer is correct. If it is,\n//present dialog box for resetting the password. \nhandleSecurityQuestionResponse = async(event) => {\n    event.preventDefault();\n    if (this.securityAnswerRef.current.value != this.state.resetAnswer) {\n            alert(\"Sorry, that is not the correct answer to the security question.\");\n        this.securityAnswerRef.current.select();\n        return;\n    } \n    this.setState({showSecurityQuestionDialog: false, \n                   showPasswordResetDialog: true});\n    this.securityAnswerRef.current.value = \"\"; //clear out field\n}\n\n//renderSecurityQuestionDialog -- Present a dialog box for user to enter answer\n//to their security question.\nrenderSecurityQuestionDialog = () => {\n    return (\n    <div className=\"modal\" role=\"dialog\">\n      <div className=\"modal-dialog modal-lg\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h3 className=\"modal-title\"><b>Answer Security Question</b>\n              <button className=\"close-modal-button\" \n                onClick={() => { this.setState({resetEmail: \"\", \n                                 resetQuestion: \"\",\n                                 resetAnswer: \"\",\n                                 showSecurityQuestionDialog: false})}}>\n                &times;</button>\n            </h3>\n          </div>\n          <div className=\"modal-body\">\n            <form onSubmit={this.handleSecurityQuestionResponse}>\n            <label>\n                Security Question: \n                <textarea\n                readOnly={true}\n                value={this.state.resetQuestion}\n                className=\"form-control form-text\"\n                rows=\"3\"\n                cols=\"35\"\n                />\n            </label>\n            <label>\n                Security Answer: \n                <textarea\n                className=\"form-control form-text\"\n                placeholder=\"Enter Security Question Answer\"\n                ref={this.securityAnswerRef}\n                rows=\"3\"\n                cols=\"35\"\n                />\n            </label>\n            <button role=\"submit\" className=\"btn btn-primary btn-color-theme form-submit-btn\">\n                <span className=\"fa fa-check\"></span>&nbsp;Verify Answer\n            </button>\n            </form>\n        </div>\n      </div>\n    </div>\n  </div>\n  );\n}\n\n//handleResetPassword: When the user clicks on the \"Reset Password\" dialog box\n//button, we need check whether the passwords match. If they do,\n//we reset the password and log the user in. \nhandleResetPassword = async(event) => {\n    event.preventDefault();\n    if (this.resetPasswordRef.current.value != this.resetPasswordRepeatRef.current.value) { \n        alert(\"Sorry, The passwords you entered do not match. Please try again.\");\n        this.resetPasswordRepeatRef.current.select();\n        return;\n    }\n    const url = '/users/' + this.state.resetEmail;\n    const resetInfo = {password: this.resetPasswordRef.current.value};\n    const res = await fetch(url, {\n        headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n        },\n        method: 'PUT',\n        body: JSON.stringify(resetInfo)}); \n    const text = await res.text();\n    alert(text);   \n    this.resetPasswordRef.current.value = \"\";\n    this.resetPasswordRepeatRef.current.value = \"\";\n    this.setState({showPasswordResetDialog: false}); \n}\n\n//renderPasswordResetDialog -- Present a dialog box for user to enter answer\n//to their security question.\nrenderPasswordResetDialog = () => {\n    return (\n    <div className=\"modal\" role=\"dialog\">\n      <div className=\"modal-dialog modal-lg\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h3 className=\"modal-title\"><b>Reset Password</b>\n              <button className=\"close-modal-button\" \n                onClick={() => {this.setState({resetEmail: \"\", \n                                 resetQuestion: \"\",\n                                 resetAnswer: \"\",\n                                 showPasswordResetDialog: false})}}>\n                &times;</button>\n            </h3>\n          </div>\n          <div className=\"modal-body\">\n            <form onSubmit={this.handleResetPassword}>\n            <label>\n                New Password: \n                <input\n                type=\"password\"\n                placeholder=\"Enter new password\"\n                pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\n                className=\"form-control form-text\"\n                ref={this.resetPasswordRef}\n                />\n            </label>\n            <p />\n            <label>\n                Repeat New Password: \n                <input\n                type=\"password\"\n                placeholder=\"Repeat new password\"\n                className=\"form-control form-text\"\n                ref={this.resetPasswordRepeatRef}\n                />\n            </label>\n            <button role=\"submit\" className=\"btn btn-primary btn-color-theme form-submit-btn\">\n                <span className=\"fa fa-key\"></span>&nbsp;Reset Password\n            </button>\n            </form>\n        </div>\n      </div>\n    </div>\n  </div>\n  );\n}\n\n//Render the Login Page\nrender() {\n    return(\n    <div id=\"login-mode-div\" className=\"padded-page\">\n    <center>\n        <h1 />\n        <form onSubmit={this.handleLoginSubmit}>\n        <label htmlFor=\"emailInput\" style={{ padding: 0, fontSize: 24 }}>\n            Email:\n            <input\n            ref={this.emailInputRef}\n            className=\"form-control login-text\"\n            type=\"email\"\n            placeholder=\"Enter Email Address\"\n            id=\"emailInput\"\n            pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\n            required={true}\n            />\n        </label>\n        <p />\n        <label htmlFor=\"passwordInput\" style={{ padding: 0, fontSize: 24 }}>\n            Password:\n            <input\n            ref={this.passwordInputRef}\n            className=\"form-control login-text\"\n            type=\"password\"\n            placeholder=\"Enter Password\"\n            required={true}\n            />\n        </label>\n        <p className=\"bg-danger login-error-msg-text\">{this.state.loginMsg}</p>\n        <button\n            type=\"submit\"\n            className=\"btn-color-theme btn btn-primary btn-block login-btn\">\n            <span className={this.state.loginBtnIcon}/>\n            &nbsp;{this.state.loginBtnLabel}\n        </button>\n        <br />\n        <p><button type=\"button\" className=\"btn btn-link login-link\" \n             onClick={() => {this.setState({showAccountDialog: true});}}>Create an account</button> | \n           <button type=\"button\" className=\"btn btn-link login-link\"\n             onClick={() => {this.setState({showLookUpAccountDialog: true});\n                             this.resetEmail.current.focus();}}>Reset your password</button>\n        </p>\n        <p></p>\n            <button type=\"button\" className=\"btn btn-github\"\n               onClick={() => this.handleOAuthLoginClick(\"github\")}>\n              <span className={this.state.githubIcon}></span>&nbsp;{this.state.githubLabel}\n            </button>\n        <p></p>\n        <p>\n            <i>CptS 489 Sp20 React</i>\n        </p>\n        <p>\n            <i>Website By AJ Block</i>\n        </p>\n        </form>\n        {this.state.showAccountDialog ? this.renderAccountDialog() : null}\n        {this.state.showLookUpAccountDialog ? this.renderLookUpAccountDialog() : null}\n        {this.state.showSecurityQuestionDialog ? this.renderSecurityQuestionDialog() : null}\n        {this.state.showPasswordResetDialog ? this.renderPasswordResetDialog() : null}\n    </center>\n    </div>\n    )\n}\n}\n\nexport default LoginPage;\n","import React from 'react';\n\nclass FeedPage extends React.Component {\n\n    render() {\n        return (\n        <div className=\"padded-page center\">\n            <h1 >Activity Feed</h1>\n            <h2>This page is under construction.</h2>\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \n             height=\"200\" width=\"200\"/>\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo<br/>\n            &copy; 2017-20 The Professor of Speedgolf. All rights reserved.</p>\n        </div>\n        );\n    }   \n}\n\nexport default FeedPage;\n","import React from 'react';\nimport '../styles/modal.css';\nimport AppMode from '../AppMode.js';\n\nclass RoundsTable extends React.Component {\n\n\n  constructor(props) {\n    super(props);\n    //confirmDelete state variable determines whether to show or hide the\n    //confirm delete dialog box\n    this.state = {confirmDelete: false}; \n  }\n\n  //editRound -- Triggered when the user clicks the edit button for a given\n  //round. The id param is the unique property that identifies the round.\n  //Set the state variable representing the id of the round to be edited and\n  //then switch to the ROUNDS_EDITROUND mode to allow the user to edit the\n  //chosen round.\n  editRound = (id) => {\n    this.props.setEditId(id);\n    this.props.changeMode(AppMode.ROUNDS_EDITROUND);\n  }\n\n  //confirmDelete -- Triggered when the user clicks on the delete button\n  //associated with a given round. The id param is the unique property that\n  //identifies the round. Set the state variable representing the id\n  //of the item to be deleted and set the confirmDelete state variable to true\n  //to force a re-render with the confirm delete modal dialog box showing.\n  confirmDelete = (id) => {\n    this.props.setDeleteId(id);\n    this.setState({confirmDelete: true});\n  }\n\n  //doDelete -- Triggered when the user clicks on the \"Yes Delete\" button in\n    //the confirm delete dialog box. Call upon parent component's deleteRound to\n    //to actually performt he deletion of the round currently flagged for\n    //deletion and toggle the confirmDelete state variable to hide the confirm\n    //dialog box.\n    doDelete = () => {\n      this.props.deleteRound();\n      this.setState({confirmDelete: false});\n    }\n\n  //cancelDelete -- Triggered when the user chooses to cancel a delete\n  //operation. We just need to update state to toggle confirmDelete to false\n  cancelDelete = () => {\n    this.props.setDeleteId(\"\"); \n    this.setState({confirmDelete: false});\n  }\n\n  //renderConfirmDeleteDialog: presents user with dialog to confirm deletion\n  //of round. Credit: https://getbootstrap.com/docs/4.0/components/modal/\n  renderConfirmDeleteDialog = () => {\n      return (\n        <div className=\"modal\" role=\"dialog\">\n          <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <p className=\"modal-title\">Confirm Round Deletion</p>\n                  <button className=\"close-modal-button\" onClick={this.cancelDelete}>\n                    &times;</button>\n              </div>\n              <div className=\"modal-body\">\n                <h4>Are you sure that you want to delete this round?</h4>\n                <div className=\"modal-footer\">\n                    <button className=\"btn btn-primary btn-color-scheme\"\n                      onClick={this.doDelete}>\n                    Yes, delete round</button>\n                    <button className=\"btn btn-secondary\" \n                      onClick={this.cancelDelete}>\n                    No, do not delete round</button>\n                </div>\n              </div>\n          </div>\n        </div>\n      );\n    }\n\n\n\n  //renderTable -- render an HTML table displaying the rounds logged\n  //by the current user and providing buttons to view/edit and delete each round.\n  renderTable = () => {\n    let table = [];\n    for (const r in this.props.rounds) {\n      table.push(\n        <tr key={r}>\n          <td>{this.props.rounds[r].date}</td>\n          <td>{this.props.rounds[r].course}</td>\n          <td>{this.props.rounds[r].type}\n          </td>\n          <td><button onClick={this.props.menuOpen ? null : () => this.editRound(r)}>\n                <span className=\"fa fa-eye fa-edit\"></span></button></td>\n          <td><button onClick={this.props.menuOpen ? null : () => this.confirmDelete(r)}>\n                <span className=\"fa fa-trash\"></span></button></td>\n        </tr> \n    );\n  }\n  return table;\n}\n\n  //render--render the entire rounds table with header, displaying a \"No\n  //Rounds Logged\" message in case the table is empty.\n  render() {\n    return(\n    <div className=\"padded-page\">\n      <h1></h1>\n      <table className=\"table table-hover\">\n        <thead className=\"thead-light\">\n        <tr>\n          <th>Date</th>\n          <th>Course</th>\n          <th>Score</th>\n          <th>View/Edit...</th>\n          <th>Delete</th>\n        </tr>\n        </thead>\n        <tbody>\n          {Object.keys(this.props.rounds).length === 0 ? \n          <tr>\n          <td colSpan=\"5\" style={{fontStyle: \"italic\"}}>No rounds logged</td>\n          </tr> : this.renderTable()\n          }\n        </tbody>\n      </table>\n      {this.state.confirmDelete ? this.renderConfirmDeleteDialog() : null}\n    </div>\n    );\n  }\n}\n\nexport default RoundsTable;","import React from 'react';\nimport AppMode from '../AppMode.js';\n\n//RoundForm -- this component presents a controlled form through which the user\n//can enter a new round or edit an existing round.\nclass RoundForm extends React.Component {\n    constructor(props) {\n      super(props);\n      //Create date object for today, taking time zone into consideration\n      let today = new Date(Date.now()-(new Date()).getTimezoneOffset()*60000);\n      //store date as ISO string\n      if (this.props.mode === AppMode.ROUNDS_LOGROUND) {\n        //If logging a new round, the starting state is a default round with\n        //today's date.\n        this.state = {date:  today.toISOString().substr(0,10), \n                    course: \"\",\n                    type: \"practice\",\n                    holes: \"18\",\n                    strokes: 80,\n                    minutes: 50,\n                    seconds: \"00\",\n                    notes: \"\",\n                    faIcon: \"fa fa-save\",\n                    btnLabel: \"Save Round Data\"}\n      } else {\n        //if editing an existing round, the starting state is the round's\n        //current data\n        this.state = this.props.startData;\n        this.state.faIcon = \"fa fa-edit\";\n        this.state.btnLabel = \"Update Round Data\";\n      }\n  }\n  \n  //handleChange -- Look for changes to the seconds field, padding any entry\n  //less than 10 with a 0 so that seconds are displayed properly.\n  handleChange = (event) => {\n      const name = event.target.name;\n      if (name === \"seconds\") {\n        this.setState({seconds: (event.target.value.length < 2 ? \"0\" + event.target.value : \n          event.target.value)});\n      } else {\n        this.setState({[name]: event.target.value});\n      }\n    }\n  \n    //handleSubmit -- When the user clicks on the button to save/update the\n    //round, start the spinner and invoke the parent component's saveRound\n    //method to do the actual work. Note that saveRound is set to the correct\n    //parent method based on whether the user is logging a new round or editing\n    //an existing round.\n    handleSubmit = (event) => {\n      //start spinner\n      this.setState({faIcon: \"fa fa-spin fa-spinner\",\n                     btnLabel: (this.props.mode === AppMode.ROUNDS_LOGROUND ? \n                                  \"Saving...\" : \"Updating...\")});\n      //Prepare current round data to be saved\n      let roundData = this.state;\n      delete roundData.faIcon;\n      delete roundData.btnLabel;\n      //call saveRound on 1 second delay to show spinning icon\n      setTimeout(this.props.saveRound,1000,roundData); \n      event.preventDefault(); \n    }\n    \n    //computeSGS -- properly computes speedgolf score based on the values of the\n    //strokes, minutes and seconds fields. We choose not to save SGS in state\n    //it can be readily computed.\n    computeSGS = () => {\n      return (Number(this.state.strokes) + Number(this.state.minutes)) \n                  + \":\" + this.state.seconds;\n    }\n  \n    //render -- renders the form to enter round data.\n    render() {\n      return (\n        <div className = \"padded-page\">\n        <form onSubmit={this.handleSubmit}>\n          <center>\n            <label>\n              Date:\n              <input name=\"date\" className=\"form-control form-center\" \n                type=\"date\" value={this.state.date} onChange={this.handleChange} />\n            </label>\n            <p></p>\n            <label>\n              Field Location:\n              <input name=\"course\" className=\"form-control form-center\" type=\"text\"\n                value={this.state.course} onChange={this.handleChange}\n                placeholder=\"Course played\" size=\"50\" maxLength=\"50\" />\n            </label>\n          <p></p>\n          <label>Type of Outing:\n          <select name=\"type\" value={this.state.type} \n            className=\"form-control form-center\" onChange={this.handleChange}>\n            <option value=\"bullpen\" selected>Bullpen</option>\n            <option value=\"intrasquad\">Intrasquad</option>\n            <option value=\"game\">Game</option>\n          </select> \n          </label>\n          <p></p>\n          <label># of Innings Thrown:\n          <select name=\"holes\" value={this.state.holes} \n            className=\"form-control form-center\" onChange={this.handleChange}>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n            <option value=\"6\">6</option>\n            <option value=\"7\">7</option>\n            <option value=\"8\">8</option>\n            <option value=\"9\">9</option>\n          </select> \n          </label>\n          <p></p>\n          <label># of Pitches Thrown:\n          <input name=\"strokes\" className=\"form-control form-center\" type=\"number\" \n            min=\"1\" max=\"150\" value={this.state.strokes} \n            onChange={this.handleChange} />\n          </label>\n          <p></p>\n          {/* <label>Time: <br></br>\n          <input name=\"minutes\" type=\"number\" size=\"3\"\n            min=\"10\" max=\"400\" value={this.state.minutes}\n            onChange={this.handleChange} />:  \n          <input name=\"seconds\" type=\"number\" size=\"2\"\n            min=\"0\" max=\"60\" value={this.state.seconds} onChange={this.handleChange} />\n          </label>\n          <p></p>\n          <label>Speedgolf Score: <br></br>\n              <input name=\"SGS\" className=\"form-center\" type=\"text\" size=\"6\" \n                disabled={true} value={this.computeSGS()} />\n          </label>\n          <p></p> */}\n          <label>Notes:\n              <textarea name=\"notes\" className=\"form-control\" rows=\"6\" cols=\"75\" \n                placeholder=\"Enter round notes\" value={this.state.notes} onChange={this.handleChange} />\n          </label>\n          <p></p>\n          <p></p>\n          <button type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} \n            className=\"btn btn-primary btn-color-theme\">\n              <span className={this.state.faIcon}/>&nbsp;{this.state.btnLabel}</button>\n          </center>\n        </form>\n        </div>\n      );\n    }\n}\n\n  export default RoundForm;","//Rounds -- A parent component for the app's \"rounds\" mode.sidemenu-user\n//Manages the rounds data for the current user and conditionally renders the\n//appropriate rounds mode page based on App's mode, which is passed in as a\n//prop.\n\nimport React from 'react';\nimport RoundsTable from './RoundsTable.js';\nimport RoundForm from './RoundForm.js';\nimport FloatingButton from './FloatingButton.js';\nimport AppMode from '../AppMode.js';\n\nclass Rounds extends React.Component {\n\n    //Initialize a Rounds object based on local storage\n    constructor(props) {\n        super(props);\n        this.state = {rounds: [],\n                      deleteId: \"\",\n                      editId: \"\"};          \n    }\n\n    //fetchRounds -- Pushes current user's rounds data into state\n    fetchRounds = async () => {\n        let url = \"/rounds/\" + this.props.user.id;\n        let res = await fetch(url, {method: 'GET'});\n        if (res.status != 200) {\n            let msg = await res.text();\n            alert(\"Sorry, there was an error obtaining rounds data for this user: \" + msg);\n            return;\n        } \n        let body = await res.json();\n        this.setState({rounds: body}, this.props.changeMode(AppMode.ROUNDS));\n    }\n\n    //When component is loaded, push data from database into state\n    componentDidMount() {\n       this.fetchRounds();\n    }\n\n    //setDeleteId -- Capture in this.state.deleteId the unique id of the item\n    //the user is considering deleting.\n    setDeleteId = (val) => {\n        this.setState({deleteId: val});\n    }\n\n    //setEditId -- Capture in this.state.editId the unique id of the item\n    //the user is considering editing.\n    setEditId = (val) => {\n        this.setState({editId: val});\n    }\n\n    //editRound -- Given an object newData containing updated data on an\n    //existing round, update the current user's round uniquely identified by\n    //this.state.editId, commit to local storage, reset editId to empty and\n    //toggle the mode back to AppMode.ROUNDS since the user is done editing the\n    //round. \n    editRound = async (newData) => {\n        let url = '/rounds/' + this.props.user.id + '/' + this.state.rounds[this.state.editId]._id;\n        let res = await fetch(url, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n            method: 'PUT',\n            body: JSON.stringify(newData)}); \n        let msg = await res.text();\n        if (res.status != 200) {\n            alert(\"An error occurred when attempting to update a round in the database: \" + msg);\n        } else {\n            //Push update into component state:\n            this.fetchRounds();\n        }\n    }\n\n\n    //deleteRound -- Delete the current user's round uniquely identified by\n    //this.state.deleteId, commit to local storage, and reset deleteId to empty.\n    deleteRound = async () => {\n        let url = '/rounds/' + this.props.user.id + '/' + this.state.rounds[this.state.deleteId]._id;\n        let res = await fetch(url, {method: 'DELETE'});\n        let msg = await res.text();\n        if (res.status != 200) {\n            alert(\"An error occurred when attempting to delete round from database: \" + msg);\n        } else {\n            //Push update into component state:\n            this.fetchRounds();\n        }\n    }\n\n    //addRound -- Given an object newData containing a new round, add the round\n    //to the current user's list of rounds, commit to local storage, and toggle\n    //the mode back to AppMode.ROUNDS since the user is done adding a round.\n    addRound = async (newData) => {\n        const url = '/rounds/' + this.props.user.id;\n        const res = await fetch(url, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n            method: 'POST',\n            body: JSON.stringify(newData)}); \n        const msg = await res.text();\n        if (res.status != 200) {\n            alert(\"An error occurred when attempting to add new round to database: \" + msg);\n        } else {\n            //Push update into component state:\n            this.fetchRounds();\n        }\n    }\n\n    //render -- Conditionally render the Rounds mode page as either the rounds\n    //table, the rounds form set to obtain a new round, or the rounds form set\n    //to edit an existing round.\n    render() {\n        switch(this.props.mode) {\n            case AppMode.ROUNDS:\n                return (\n                  <React.Fragment>\n                  <RoundsTable \n                    rounds={this.state.rounds}\n                    setEditId={this.setEditId}\n                    setDeleteId={this.setDeleteId}\n                    deleteRound={this.deleteRound}\n                    changeMode={this.props.changeMode}\n                    menuOpen={this.props.menuOpen} /> \n                  <FloatingButton\n                      handleClick={() => \n                        this.props.changeMode(AppMode.ROUNDS_LOGROUND)}\n                      menuOpen={this.props.menuOpen}\n                      icon={\"fa fa-plus\"} />\n                  </React.Fragment>\n                );\n            case AppMode.ROUNDS_LOGROUND:\n                return (\n                    <RoundForm\n                       mode={this.props.mode}\n                       startData={\"\"} \n                       saveRound={this.addRound} />\n                );\n            case AppMode.ROUNDS_EDITROUND:\n                return (\n                    <RoundForm\n                      mode={this.props.mode}\n                      startData={this.state.rounds[this.state.editId]} \n                      saveRound={this.editRound} />\n                );\n        }\n    }\n}    \n\n    export default Rounds;","import React from 'react';\n\nclass CoursesPage extends React.Component {\n\n       render() {\n        return (\n        <div className=\"padded-page center\">\n            <h1>Courses</h1>\n            <h2>This page is under construction.</h2>\n            <p style={{fontStyle: \"italic\"}}>\n            CptS 489 React<br/></p>\n        </div>\n        );\n    }   \n}\n\nexport default CoursesPage;\n","import React from 'react';\nimport NavBar from './NavBar.js';\nimport SideMenu from './SideMenu.js';\nimport ModeBar from './ModeBar.js';\nimport FloatingButton from './FloatingButton.js';\nimport LoginPage from './LoginPage.js';\nimport FeedPage from './FeedPage.js';\nimport Rounds from './Rounds.js';\nimport CoursesPage from './CoursesPage.js';\nimport AppMode from \"./../AppMode.js\";\n\nconst modeTitle = {};\nmodeTitle[AppMode.LOGIN] = \"Welcome to myApp\";\nmodeTitle[AppMode.FEED] = \"Activity Feed\";\nmodeTitle[AppMode.ROUNDS] = \"My Rounds\";\nmodeTitle[AppMode.ROUNDS_LOGROUND] = \"Log New Round\";\nmodeTitle[AppMode.ROUNDS_EDITROUND] = \"Edit Round\";\nmodeTitle[AppMode.COURSES] = \"Courses\";\n\nconst modeToPage = {};\nmodeToPage[AppMode.LOGIN] = LoginPage;\nmodeToPage[AppMode.FEED] = FeedPage;\nmodeToPage[AppMode.ROUNDS] = Rounds;\nmodeToPage[AppMode.ROUNDS_LOGROUND] = Rounds;\nmodeToPage[AppMode.ROUNDS_EDITROUND] = Rounds;\nmodeToPage[AppMode.COURSES] = CoursesPage;\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {mode: AppMode.LOGIN,\n                  menuOpen: false,\n                  user: \"\",\n                  showAbout: false,\n                  authenticated: false,\n                  };\n  }\n\n  handleChangeMode = (newMode) => {\n    this.setState({mode: newMode});\n  }\n\n  openMenu = () => {\n    this.setState({menuOpen : true});\n  }\n  \n  closeMenu = () => {\n    this.setState({menuOpen : false});\n  }\n\n  toggleMenuOpen = () => {\n    this.setState(prevState => ({menuOpen: !prevState.menuOpen}));\n  }\n\n  //Set the User Id object, which contains the following props:\n  //id, username, provider, profileImageUrl\n  setUser = (userObj) => {\n    this.setState({user: userObj});\n  }\n\n  //setAuthenticated -- Given auth (true or false), update authentication state.\n  setAuthenticated = (auth) => {\n    this.setState({authenticated: auth});\n  }\n\n\n  //componentDidMount -- Add a window-level click handler to close the\n  //side menu if it is open. In addition, if we are using a non-local auth\n  //strategy, we need to check if we're authenticated and set the mode var appropriately.\n  componentDidMount() {\n    window.addEventListener(\"click\",this.handleClick);\n    if (!this.state.authenticated) { \n      //Use /auth/test route to re-test authentication and obtain user data\n      fetch(\"/auth/test\")\n        .then((response) => response.json())\n        .then((obj) => {\n          if (obj.isAuthenticated) {\n            let data = JSON.parse(localStorage.getItem(\"speedgolfUserData\"));\n            if (data == null) {\n              data = {}; //create empty database (localStorage)\n            }\n            if (!data.hasOwnProperty(obj.user.id)) {\n              //create new user with this id in database (localStorage)\n              data[obj.user.id] = {\n                accountInfo: {\n                  provider: obj.user.provider,\n                  password: '',\n                  securityQuestion: '',\n                  securityAnswer: ''\n                },\n                rounds: {}, \n                roundCount: 0\n              };\n              //Commit to localStorage:\n              localStorage.setItem(\"speedgolfUserData\",JSON.stringify(data));\n            } \n            //Update current user\n            this.setState({\n              authenticated: true,\n              user: obj.user,\n              mode: AppMode.ROUNDS //We're authenticated so can get into the app.\n            });\n          }\n        }\n      )\n    } \n  }\n\n//We remove the event listener when the component\n//unmounts. This is a best practice. \ncomponentWillUnmount() {\n  window.removeEventListener(\"click\",this.handleClick);\n}\n\n  //When the user clicks anywhere on the app and the menu is open, close it.\n  //This function takes advantage of event bubbling.\n  handleClick = (event) => {\n    if (this.state.menuOpen) {\n      this.closeMenu();\n    }\n    event.stopPropagation();\n  }\n\n  toggleAbout = () => {\n    this.setState(prevState => ({showAbout: !prevState.showAbout}));\n  }\n\n  renderAbout = () => {\n    return (\n      <div className=\"modal\" role=\"dialog\">\n        <div className=\"modal-dialog modal-lg\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h3 className=\"modal-title\"><b>About SpeedScore</b>\n                <button className=\"close-modal-button\" onClick={this.toggleAbout}>\n                  &times;</button>\n              </h3>\n            </div>\n            <div className=\"modal-body\">\n              <img\n              src=\"https://dl.dropboxusercontent.com/s/awuwr1vpuw1lkyl/SpeedScore4SplashLogo.png\"\n              height=\"200\" width=\"200\"/>\n              <h3>The World's First and Only Suite of Apps for\n              Speedgolf</h3>\n              <p>Version CptS 489 Sp20, Build W06C2 (React)<br/>\n              &copy; 2017-20 The Professor of Speedgolf. All rights\n              reserved.\n              </p>\n              <div style={{textAlign: \"left\"}}>\n                <p>SpeedScore apps support</p>\n                <ul>\n                <li>live touranment scoring (<i>SpeedScore Live&reg;</i>)</li>\n                <li>tracking personal speedgolf rounds and sharing results\n                (<i>SpeedScore Track&reg;</i>)</li>\n                <li>finding speedgolf-friendly courses, booking tee times, and\n                paying to play speedgolf by the minute (<i>SpeedScore\n                Play&reg;</i>)</li>\n                </ul>\n                <p>SpeedScore was first developed by Dr. Chris Hundhausen,\n                associate professor of computer science at Washington State\n                University and the <i>Professor of Speedgolf</i>, with support\n                from Scott Dawley, CEO of Speedgolf USA, LLC. It leverages\n                Google server-side technologies.</p>\n                <p>For more information on SpeedScore, visit <a\n                href=\"http://speedscore.live\" target=\"_blank\">SpeedScore's web\n                site</a>. For more information on speedgolf, visit <a\n                href=\"http://playspeedgolf.com\"\n                target=\"_blank\">playspeedgolf.com</a> and <a\n                href=\"http://usaspeedgolf.com\" target=\"_blank\">Speedgolf\n                USA</a>.</p>\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button className=\"btn btn-primary btn-color-theme\"\n                onClick={this.toggleAbout}>OK</button>\n              </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const ModePage = modeToPage[this.state.mode];\n    return (\n      <div onClick={this.handleClick}>\n        <NavBar \n          title={modeTitle[this.state.mode]}\n          mode={this.state.mode}\n          changeMode={this.handleChangeMode}\n          menuOpen={this.state.menuOpen}\n          toggleMenuOpen={this.toggleMenuOpen}/>\n        <SideMenu \n          mode={this.state.mode}\n          menuOpen={this.state.menuOpen}\n          changeMode={this.handleChangeMode}\n          user={this.state.user}\n          showAbout={this.toggleAbout}/>\n        <ModeBar \n          mode={this.state.mode} \n          changeMode={this.handleChangeMode}\n          menuOpen={this.state.menuOpen}/>\n        <ModePage menuOpen={this.state.menuOpen}\n          mode={this.state.mode} \n          changeMode={this.handleChangeMode}\n          setAuthenticated={this.setAuthenticated}\n          user={this.state.user}\n          setUser={this.setUser}/>\n        {this.state.showAbout ? this.renderAbout() : null}\n      </div>\n      );  \n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './styles/index.css';\nimport './styles/modal.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}